import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'superReducedString' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String superReducedString(String s) {
    // Write your code here
    Stack<Character> rs = new Stack<>();
    int i=1;
    rs.push((s.charAt(0)));
    while(i<s.length()){
        if(!rs.isEmpty()){
        char top = rs.peek();
        if(top == s.charAt(i)){
            rs.pop();
           
        }
        else{
            rs.push(s.charAt(i));
            
        }
        }
        else{
            rs.push(s.charAt(i));
        }
        i++;
    }
    if(rs.isEmpty()){
        return "Empty String";
    }
    else{
        ArrayList<Character> al = new ArrayList<>();
        while(!rs.isEmpty()){
            al.add(rs.pop());
        }
        Collections.reverse(al);
        String finStr = "";
        for(Character c : al){
            finStr+=c;
        }
        return finStr;
    }

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = Result.superReducedString(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
